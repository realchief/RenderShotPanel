"""
Django settings for rendershot_django project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
import logging
from pathlib import Path
from django.contrib.messages import constants as messages
from django.urls import reverse_lazy
from datetime import timedelta
import dotenv


BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
dotenv.load_dotenv(f"{os.path.join(os.path.dirname(os.path.dirname(__file__)))}/.env")

MESSAGE_TAGS = {
    messages.DEBUG: 'alert alert-info',
    messages.INFO: 'alert alert-info',
    messages.SUCCESS: 'alert alert-success',
    messages.WARNING: 'alert alert-warning',
    messages.ERROR: 'alert alert-danger',
}


EMAIL_BACKEND = os.environ.get('EMAIL_BACKEND')
EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_USE_TLS = os.environ.get('EMAIL_USE_TLS')
EMAIL_PORT = os.environ.get('EMAIL_PORT')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')

SECRET_KEY = os.environ.get('SECRET_KEY')

INSTALLED_APPS = [
    'channels',
    'jet',
    'rendershot_django.apps.MyAdminConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'users.apps.UsersConfig',
    'system.apps.SystemConfig',
    'dashboard.apps.DashboardConfig',
    'ticketing.apps.TicketingConfig',
    'payment.apps.PaymentConfig',
    'job.apps.JobConfig',
    'rest_framework',
    'rest_framework.authtoken',
    'loginas',
    'colorfield',
    'advanced_filters',
    'django_json_widget',
    'nested_admin',
    'captcha',
]
SITE_ID = 1

X_FRAME_OPTIONS = 'SAMEORIGIN'

ROOT_URLCONF = 'rendershot_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'loginas.context_processors.impersonated_session_status',
            ],
        },
    },
]

WSGI_APPLICATION = 'rendershot_django.wsgi.application'
ASGI_APPLICATION = 'rendershot_django.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "standard": {
            "format": "[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s"

        }
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "standard",
            "level": "DEBUG",
            "stream": "ext://sys.stdout"
        },
        "file": {
            "class": "logging.handlers.TimedRotatingFileHandler",
            "formatter": "standard",
            "level": "DEBUG",
            "filename": os.path.join(BASE_DIR, "logs/log.log"),
            "when": "D",
            "interval": 3,
            "backupCount": 1,
            "encoding": "utf-8"
        },
        "dbx": {
            "class": "logging.handlers.TimedRotatingFileHandler",
            "formatter": "standard",
            "level": "DEBUG",
            "filename": os.path.join(BASE_DIR, "logs/DBX.log"),
            "when": "D",
            "interval": 3,
            "backupCount": 1,
            "encoding": "utf-8"
        },
        "job_api": {
            "class": "logging.handlers.TimedRotatingFileHandler",
            "formatter": "standard",
            "level": "DEBUG",
            "filename": os.path.join(BASE_DIR, "logs/JobAPI.log"),
            "when": "D",
            "interval": 3,
            "backupCount": 1,
            "encoding": "utf-8"
        },
        "admin_socket": {
            "class": "logging.handlers.TimedRotatingFileHandler",
            "formatter": "standard",
            "level": "DEBUG",
            "filename": os.path.join(BASE_DIR, "logs/AdminSocket.log"),
            "when": "D",
            "interval": 3,
            "backupCount": 1,
            "encoding": "utf-8"
        },
        "jobs_socket": {
            "class": "logging.handlers.TimedRotatingFileHandler",
            "formatter": "standard",
            "level": "DEBUG",
            "filename": os.path.join(BASE_DIR, "logs/JobsSocket.log"),
            "when": "D",
            "interval": 3,
            "backupCount": 1,
            "encoding": "utf-8"
        }
    },
    "loggers": {"": {"handlers": ["console", "file"], "level": "DEBUG"},
                "DBX": {"handlers": ["console", "dbx"], "level": "DEBUG"},
                "JobAPI": {"handlers": ["console", "job_api"], "level": "DEBUG"},
                "SystemSocket": {"handlers": ["console", "admin_socket"], "level": "DEBUG"},
                "JobsSocket": {"handlers": ["console", "jobs_socket"], "level": "DEBUG"},
                }
}


LOGIN_REDIRECT_URL = '/dashboard/'
LOGOUT_REDIRECT_URL = '/'

GRAVATAR_DEFAULT_URL = "mystery"
GRAVATAR_SECURE = True

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework.authentication.SessionAuthentication', ],
}


LOGOUT_URL = reverse_lazy('loginas-logout')
LOGINAS_LOGOUT_REDIRECT_URL = reverse_lazy('admin:index')


RECAPTCHA_SITE_KEY = os.environ.get('RECAPTCHA_SITE_KEY')
RECAPTCHA_SECRET_KEY = os.environ.get('RECAPTCHA_SECRET_KEY')
RECAPTCHA_REQUIRED_SCORE = 0.5

SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']